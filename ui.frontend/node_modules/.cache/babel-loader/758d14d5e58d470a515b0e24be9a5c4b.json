{"ast":null,"code":"'use strict';\n\nvar _createForOfIteratorHelper = require(\"C:/Users/Rulian/Documents/AEM/Projetos/reactcompass/ui.frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/Rulian/Documents/AEM/Projetos/reactcompass/ui.frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/Rulian/Documents/AEM/Projetos/reactcompass/ui.frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar NoWorkResult = require('./no-work-result');\n\nvar LazyResult = require('./lazy-result');\n\nvar Document = require('./document');\n\nvar Root = require('./root');\n\nvar Processor = /*#__PURE__*/function () {\n  function Processor() {\n    var plugins = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, Processor);\n\n    this.version = '8.4.12';\n    this.plugins = this.normalize(plugins);\n  }\n\n  _createClass(Processor, [{\n    key: \"use\",\n    value: function use(plugin) {\n      this.plugins = this.plugins.concat(this.normalize([plugin]));\n      return this;\n    }\n  }, {\n    key: \"process\",\n    value: function process(css) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (this.plugins.length === 0 && typeof opts.parser === 'undefined' && typeof opts.stringifier === 'undefined' && typeof opts.syntax === 'undefined') {\n        return new NoWorkResult(this, css, opts);\n      } else {\n        return new LazyResult(this, css, opts);\n      }\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(plugins) {\n      var normalized = [];\n\n      var _iterator = _createForOfIteratorHelper(plugins),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var i = _step.value;\n\n          if (i.postcss === true) {\n            i = i();\n          } else if (i.postcss) {\n            i = i.postcss;\n          }\n\n          if (typeof i === 'object' && Array.isArray(i.plugins)) {\n            normalized = normalized.concat(i.plugins);\n          } else if (typeof i === 'object' && i.postcssPlugin) {\n            normalized.push(i);\n          } else if (typeof i === 'function') {\n            normalized.push(i);\n          } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n            if (process.env.NODE_ENV !== 'production') {\n              throw new Error('PostCSS syntaxes cannot be used as plugins. Instead, please use ' + 'one of the syntax/parser/stringifier options as outlined ' + 'in your PostCSS runner documentation.');\n            }\n          } else {\n            throw new Error(i + ' is not a PostCSS plugin');\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return normalized;\n    }\n  }]);\n\n  return Processor;\n}();\n\nmodule.exports = Processor;\nProcessor.default = Processor;\nRoot.registerProcessor(Processor);\nDocument.registerProcessor(Processor);","map":{"version":3,"sources":["C:/Users/Rulian/Documents/AEM/Projetos/reactcompass/ui.frontend/node_modules/postcss/lib/processor.js"],"names":["NoWorkResult","require","LazyResult","Document","Root","Processor","plugins","version","normalize","plugin","concat","css","opts","length","parser","stringifier","syntax","normalized","i","postcss","Array","isArray","postcssPlugin","push","parse","stringify","process","env","NODE_ENV","Error","module","exports","default","registerProcessor"],"mappings":"AAAA;;;;;;;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,kBAAD,CAA1B;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,eAAD,CAAxB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,YAAD,CAAtB;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,QAAD,CAAlB;;IAEMI,S;AACJ,uBAA0B;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AACxB,SAAKC,OAAL,GAAe,QAAf;AACA,SAAKD,OAAL,GAAe,KAAKE,SAAL,CAAeF,OAAf,CAAf;AACD;;;;WAED,aAAIG,MAAJ,EAAY;AACV,WAAKH,OAAL,GAAe,KAAKA,OAAL,CAAaI,MAAb,CAAoB,KAAKF,SAAL,CAAe,CAACC,MAAD,CAAf,CAApB,CAAf;AACA,aAAO,IAAP;AACD;;;WAED,iBAAQE,GAAR,EAAwB;AAAA,UAAXC,IAAW,uEAAJ,EAAI;;AACtB,UACE,KAAKN,OAAL,CAAaO,MAAb,KAAwB,CAAxB,IACA,OAAOD,IAAI,CAACE,MAAZ,KAAuB,WADvB,IAEA,OAAOF,IAAI,CAACG,WAAZ,KAA4B,WAF5B,IAGA,OAAOH,IAAI,CAACI,MAAZ,KAAuB,WAJzB,EAKE;AACA,eAAO,IAAIhB,YAAJ,CAAiB,IAAjB,EAAuBW,GAAvB,EAA4BC,IAA5B,CAAP;AACD,OAPD,MAOO;AACL,eAAO,IAAIV,UAAJ,CAAe,IAAf,EAAqBS,GAArB,EAA0BC,IAA1B,CAAP;AACD;AACF;;;WAED,mBAAUN,OAAV,EAAmB;AACjB,UAAIW,UAAU,GAAG,EAAjB;;AADiB,iDAEHX,OAFG;AAAA;;AAAA;AAEjB,4DAAuB;AAAA,cAAdY,CAAc;;AACrB,cAAIA,CAAC,CAACC,OAAF,KAAc,IAAlB,EAAwB;AACtBD,YAAAA,CAAC,GAAGA,CAAC,EAAL;AACD,WAFD,MAEO,IAAIA,CAAC,CAACC,OAAN,EAAe;AACpBD,YAAAA,CAAC,GAAGA,CAAC,CAACC,OAAN;AACD;;AAED,cAAI,OAAOD,CAAP,KAAa,QAAb,IAAyBE,KAAK,CAACC,OAAN,CAAcH,CAAC,CAACZ,OAAhB,CAA7B,EAAuD;AACrDW,YAAAA,UAAU,GAAGA,UAAU,CAACP,MAAX,CAAkBQ,CAAC,CAACZ,OAApB,CAAb;AACD,WAFD,MAEO,IAAI,OAAOY,CAAP,KAAa,QAAb,IAAyBA,CAAC,CAACI,aAA/B,EAA8C;AACnDL,YAAAA,UAAU,CAACM,IAAX,CAAgBL,CAAhB;AACD,WAFM,MAEA,IAAI,OAAOA,CAAP,KAAa,UAAjB,EAA6B;AAClCD,YAAAA,UAAU,CAACM,IAAX,CAAgBL,CAAhB;AACD,WAFM,MAEA,IAAI,OAAOA,CAAP,KAAa,QAAb,KAA0BA,CAAC,CAACM,KAAF,IAAWN,CAAC,CAACO,SAAvC,CAAJ,EAAuD;AAC5D,gBAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,oBAAM,IAAIC,KAAJ,CACJ,qEACE,2DADF,GAEE,uCAHE,CAAN;AAKD;AACF,WARM,MAQA;AACL,kBAAM,IAAIA,KAAJ,CAAUX,CAAC,GAAG,0BAAd,CAAN;AACD;AACF;AA1BgB;AAAA;AAAA;AAAA;AAAA;;AA2BjB,aAAOD,UAAP;AACD;;;;;;AAGHa,MAAM,CAACC,OAAP,GAAiB1B,SAAjB;AACAA,SAAS,CAAC2B,OAAV,GAAoB3B,SAApB;AAEAD,IAAI,CAAC6B,iBAAL,CAAuB5B,SAAvB;AACAF,QAAQ,CAAC8B,iBAAT,CAA2B5B,SAA3B","sourcesContent":["'use strict'\n\nlet NoWorkResult = require('./no-work-result')\nlet LazyResult = require('./lazy-result')\nlet Document = require('./document')\nlet Root = require('./root')\n\nclass Processor {\n  constructor(plugins = []) {\n    this.version = '8.4.12'\n    this.plugins = this.normalize(plugins)\n  }\n\n  use(plugin) {\n    this.plugins = this.plugins.concat(this.normalize([plugin]))\n    return this\n  }\n\n  process(css, opts = {}) {\n    if (\n      this.plugins.length === 0 &&\n      typeof opts.parser === 'undefined' &&\n      typeof opts.stringifier === 'undefined' &&\n      typeof opts.syntax === 'undefined'\n    ) {\n      return new NoWorkResult(this, css, opts)\n    } else {\n      return new LazyResult(this, css, opts)\n    }\n  }\n\n  normalize(plugins) {\n    let normalized = []\n    for (let i of plugins) {\n      if (i.postcss === true) {\n        i = i()\n      } else if (i.postcss) {\n        i = i.postcss\n      }\n\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins)\n      } else if (typeof i === 'object' && i.postcssPlugin) {\n        normalized.push(i)\n      } else if (typeof i === 'function') {\n        normalized.push(i)\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error(\n            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +\n              'one of the syntax/parser/stringifier options as outlined ' +\n              'in your PostCSS runner documentation.'\n          )\n        }\n      } else {\n        throw new Error(i + ' is not a PostCSS plugin')\n      }\n    }\n    return normalized\n  }\n}\n\nmodule.exports = Processor\nProcessor.default = Processor\n\nRoot.registerProcessor(Processor)\nDocument.registerProcessor(Processor)\n"]},"metadata":{},"sourceType":"script"}