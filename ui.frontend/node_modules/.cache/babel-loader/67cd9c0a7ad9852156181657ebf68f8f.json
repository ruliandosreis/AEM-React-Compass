{"ast":null,"code":"import _classCallCheck from\"C:/Users/Rulian/Documents/AEM/Projetos/reactcompass/ui.frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/Rulian/Documents/AEM/Projetos/reactcompass/ui.frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"C:/Users/Rulian/Documents/AEM/Projetos/reactcompass/ui.frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/Rulian/Documents/AEM/Projetos/reactcompass/ui.frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import{ModelClient}from'@adobe/aem-spa-page-model-manager';/**\r\n * Used to make react-server possible (localhost development).\r\n */var LocalDevModelClient=/*#__PURE__*/function(_ModelClient){_inherits(LocalDevModelClient,_ModelClient);var _super=_createSuper(LocalDevModelClient);function LocalDevModelClient(){_classCallCheck(this,LocalDevModelClient);return _super.apply(this,arguments);}_createClass(LocalDevModelClient,[{key:\"fetch\",value:function(_fetch){function fetch(_x){return _fetch.apply(this,arguments);}fetch.toString=function(){return _fetch.toString();};return fetch;}(function(modelPath){if(!modelPath){var err=\"Fetching model rejected for path: \".concat(modelPath);return Promise.reject(new Error(err));}// Either the API host has been provided or we make an absolute request relative to the current host\nvar apihostPrefix=this._apiHost||'';var url=\"\".concat(apihostPrefix).concat(modelPath);return fetch(url,{credentials:'same-origin',headers:{'Authorization':process.env.REACT_APP_AEM_AUTHORIZATION_HEADER}}).then(function(response){if(response.status>=200&&response.status<300){return response.json();}return Promise.reject(response);}).catch(function(error){return Promise.reject(error);});})}]);return LocalDevModelClient;}(ModelClient);export{LocalDevModelClient as default};","map":{"version":3,"sources":["C:/Users/Rulian/Documents/AEM/Projetos/reactcompass/ui.frontend/src/LocalDevModelClient.js"],"names":["ModelClient","LocalDevModelClient","modelPath","err","Promise","reject","Error","apihostPrefix","_apiHost","url","fetch","credentials","headers","process","env","REACT_APP_AEM_AUTHORIZATION_HEADER","then","response","status","json","catch","error"],"mappings":"okBAAA,OAAQA,WAAR,KAA0B,mCAA1B,CAEA;AACA;AACA,G,GACqBC,CAAAA,mB,8aAEjB,SAAMC,SAAN,CAAiB,CAEb,GAAI,CAACA,SAAL,CAAgB,CACZ,GAAMC,CAAAA,GAAG,6CAAwCD,SAAxC,CAAT,CAEA,MAAOE,CAAAA,OAAO,CAACC,MAAR,CAAe,GAAIC,CAAAA,KAAJ,CAAUH,GAAV,CAAf,CAAP,CACH,CAED;AACA,GAAMI,CAAAA,aAAa,CAAG,KAAKC,QAAL,EAAiB,EAAvC,CACA,GAAMC,CAAAA,GAAG,WAAMF,aAAN,SAAsBL,SAAtB,CAAT,CAEA,MAAOQ,CAAAA,KAAK,CAACD,GAAD,CAAM,CACdE,WAAW,CAAE,aADC,CAEdC,OAAO,CAAE,CACL,gBAAiBC,OAAO,CAACC,GAAR,CAAYC,kCADxB,CAFK,CAAN,CAAL,CAKJC,IALI,CAKC,SAACC,QAAD,CAAc,CAClB,GAAKA,QAAQ,CAACC,MAAT,EAAmB,GAApB,EAA6BD,QAAQ,CAACC,MAAT,CAAkB,GAAnD,CAAyD,CACrD,MAAOD,CAAAA,QAAQ,CAACE,IAAT,EAAP,CACH,CAED,MAAOf,CAAAA,OAAO,CAACC,MAAR,CAAeY,QAAf,CAAP,CACH,CAXM,EAWJG,KAXI,CAWE,SAACC,KAAD,CAAW,CAChB,MAAOjB,CAAAA,OAAO,CAACC,MAAR,CAAegB,KAAf,CAAP,CACH,CAbM,CAAP,CAeH,C,kCA7B4CrB,W,SAA5BC,mB","sourcesContent":["import {ModelClient} from '@adobe/aem-spa-page-model-manager';\r\n\r\n/**\r\n * Used to make react-server possible (localhost development).\r\n */\r\nexport default class LocalDevModelClient extends ModelClient{\r\n\r\n    fetch(modelPath) {\r\n\r\n        if (!modelPath) {\r\n            const err = `Fetching model rejected for path: ${modelPath}`;\r\n\r\n            return Promise.reject(new Error(err));\r\n        }\r\n\r\n        // Either the API host has been provided or we make an absolute request relative to the current host\r\n        const apihostPrefix = this._apiHost || '';\r\n        const url = `${apihostPrefix}${modelPath}`;\r\n\r\n        return fetch(url, {\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Authorization': process.env.REACT_APP_AEM_AUTHORIZATION_HEADER\r\n            }\r\n        }).then((response) => {\r\n            if ((response.status >= 200) && (response.status < 300)) {\r\n                return response.json() ;\r\n            }\r\n\r\n            return Promise.reject(response);\r\n        }).catch((error) => {\r\n            return Promise.reject(error);\r\n        });\r\n\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}