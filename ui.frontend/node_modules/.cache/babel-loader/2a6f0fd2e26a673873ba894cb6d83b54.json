{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = require(\"C:/Users/Rulian/Documents/AEM/Projetos/reactcompass/ui.frontend/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _classCallCheck = require(\"C:/Users/Rulian/Documents/AEM/Projetos/reactcompass/ui.frontend/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"C:/Users/Rulian/Documents/AEM/Projetos/reactcompass/ui.frontend/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar MapGenerator = require('./map-generator');\n\nvar stringify = require('./stringify');\n\nvar warnOnce = require('./warn-once');\n\nvar parse = require('./parse');\n\nvar Result = require('./result');\n\nvar NoWorkResult = /*#__PURE__*/function (_Symbol$toStringTag) {\n  function NoWorkResult(processor, css, opts) {\n    _classCallCheck(this, NoWorkResult);\n\n    css = css.toString();\n    this.stringified = false;\n    this._processor = processor;\n    this._css = css;\n    this._opts = opts;\n    this._map = undefined;\n    var root;\n    var str = stringify;\n    this.result = new Result(this._processor, root, this._opts);\n    this.result.css = css;\n    var self = this;\n    Object.defineProperty(this.result, 'root', {\n      get: function get() {\n        return self.root;\n      }\n    });\n    var map = new MapGenerator(str, root, this._opts, css);\n\n    if (map.isMap()) {\n      var _map$generate = map.generate(),\n          _map$generate2 = _slicedToArray(_map$generate, 2),\n          generatedCSS = _map$generate2[0],\n          generatedMap = _map$generate2[1];\n\n      if (generatedCSS) {\n        this.result.css = generatedCSS;\n      }\n\n      if (generatedMap) {\n        this.result.map = generatedMap;\n      }\n    }\n  }\n\n  _createClass(NoWorkResult, [{\n    key: _Symbol$toStringTag,\n    get: function get() {\n      return 'NoWorkResult';\n    }\n  }, {\n    key: \"processor\",\n    get: function get() {\n      return this.result.processor;\n    }\n  }, {\n    key: \"opts\",\n    get: function get() {\n      return this.result.opts;\n    }\n  }, {\n    key: \"css\",\n    get: function get() {\n      return this.result.css;\n    }\n  }, {\n    key: \"content\",\n    get: function get() {\n      return this.result.css;\n    }\n  }, {\n    key: \"map\",\n    get: function get() {\n      return this.result.map;\n    }\n  }, {\n    key: \"root\",\n    get: function get() {\n      if (this._root) {\n        return this._root;\n      }\n\n      var root;\n      var parser = parse;\n\n      try {\n        root = parser(this._css, this._opts);\n      } catch (error) {\n        this.error = error;\n      }\n\n      if (this.error) {\n        throw this.error;\n      } else {\n        this._root = root;\n        return root;\n      }\n    }\n  }, {\n    key: \"messages\",\n    get: function get() {\n      return [];\n    }\n  }, {\n    key: \"warnings\",\n    value: function warnings() {\n      return [];\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this._css;\n    }\n  }, {\n    key: \"then\",\n    value: function then(onFulfilled, onRejected) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!('from' in this._opts)) {\n          warnOnce('Without `from` option PostCSS could generate wrong source map ' + 'and will not find Browserslist config. Set it to CSS file path ' + 'or to `undefined` to prevent this warning.');\n        }\n      }\n\n      return this.async().then(onFulfilled, onRejected);\n    }\n  }, {\n    key: \"catch\",\n    value: function _catch(onRejected) {\n      return this.async().catch(onRejected);\n    }\n  }, {\n    key: \"finally\",\n    value: function _finally(onFinally) {\n      return this.async().then(onFinally, onFinally);\n    }\n  }, {\n    key: \"async\",\n    value: function async() {\n      if (this.error) return Promise.reject(this.error);\n      return Promise.resolve(this.result);\n    }\n  }, {\n    key: \"sync\",\n    value: function sync() {\n      if (this.error) throw this.error;\n      return this.result;\n    }\n  }]);\n\n  return NoWorkResult;\n}(Symbol.toStringTag);\n\nmodule.exports = NoWorkResult;\nNoWorkResult.default = NoWorkResult;","map":{"version":3,"sources":["C:/Users/Rulian/Documents/AEM/Projetos/reactcompass/ui.frontend/node_modules/postcss/lib/no-work-result.js"],"names":["MapGenerator","require","stringify","warnOnce","parse","Result","NoWorkResult","processor","css","opts","toString","stringified","_processor","_css","_opts","_map","undefined","root","str","result","self","Object","defineProperty","get","map","isMap","generate","generatedCSS","generatedMap","_root","parser","error","onFulfilled","onRejected","process","env","NODE_ENV","async","then","catch","onFinally","Promise","reject","resolve","Symbol","toStringTag","module","exports","default"],"mappings":"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","sourcesContent":["'use strict'\n\nlet MapGenerator = require('./map-generator')\nlet stringify = require('./stringify')\nlet warnOnce = require('./warn-once')\nlet parse = require('./parse')\nconst Result = require('./result')\n\nclass NoWorkResult {\n  constructor(processor, css, opts) {\n    css = css.toString()\n    this.stringified = false\n\n    this._processor = processor\n    this._css = css\n    this._opts = opts\n    this._map = undefined\n    let root\n\n    let str = stringify\n    this.result = new Result(this._processor, root, this._opts)\n    this.result.css = css\n\n    let self = this\n    Object.defineProperty(this.result, 'root', {\n      get() {\n        return self.root\n      }\n    })\n\n    let map = new MapGenerator(str, root, this._opts, css)\n    if (map.isMap()) {\n      let [generatedCSS, generatedMap] = map.generate()\n      if (generatedCSS) {\n        this.result.css = generatedCSS\n      }\n      if (generatedMap) {\n        this.result.map = generatedMap\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'NoWorkResult'\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get css() {\n    return this.result.css\n  }\n\n  get content() {\n    return this.result.css\n  }\n\n  get map() {\n    return this.result.map\n  }\n\n  get root() {\n    if (this._root) {\n      return this._root\n    }\n\n    let root\n    let parser = parse\n\n    try {\n      root = parser(this._css, this._opts)\n    } catch (error) {\n      this.error = error\n    }\n\n    if (this.error) {\n      throw this.error\n    } else {\n      this._root = root\n      return root\n    }\n  }\n\n  get messages() {\n    return []\n  }\n\n  warnings() {\n    return []\n  }\n\n  toString() {\n    return this._css\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this._opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    return Promise.resolve(this.result)\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    return this.result\n  }\n}\n\nmodule.exports = NoWorkResult\nNoWorkResult.default = NoWorkResult\n"]},"metadata":{},"sourceType":"script"}